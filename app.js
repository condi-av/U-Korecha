let cart = [];

document.addEventListener('DOMContentLoaded', function() {
    const cartItems = document.getElementById('cart-items');
    const cartCount = document.getElementById('cart-count');
    const cartTotal = document.getElementById('cart-total-price');
    const notification = document.getElementById('notification');
    const cartSidebar = document.getElementById('cart-sidebar');

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    document.querySelectorAll('.menu-category button').forEach(button => {
        button.addEventListener('click', function() {
            document.querySelectorAll('.menu-category button').forEach(btn => {
                btn.classList.remove('active');
            });
            this.classList.add('active');
            
            const category = this.getAttribute('data-category');
            document.querySelectorAll('.product-card').forEach(card => {
                card.style.display = card.getAttribute('data-category') === category ? 'block' : 'none';
            });
        });
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ä–∞–∑–º–µ—Ä–∞ –ø–∏—Ü—Ü—ã
    document.querySelectorAll('.size-btn').forEach(btn => {
        btn.addEventListener('click', function() {
            const parent = this.closest('.product-info');
            if (parent) {
                parent.querySelectorAll('.size-btn').forEach(b => b.classList.remove('active'));
                this.classList.add('active');
                
                const price = this.getAttribute('data-price');
                const addButton = this.closest('.product-card').querySelector('.add-to-cart');
                addButton.setAttribute('data-price', price);
            }
        });
    });

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É
    document.querySelectorAll('.add-to-cart').forEach(button => {
        button.addEventListener('click', function() {
            const id = this.getAttribute('data-id');
            const name = this.getAttribute('data-name');
            const price = parseInt(this.getAttribute('data-price'));
            
            addToCart(id, name, price);
            showNotification(`${name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É`);
        });
    });

    // –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è)
    function addToCart(id, name, price) {
        const productCard = document.querySelector(`[data-id="${id}"]`).closest('.product-card');
        const sizeBtn = productCard.querySelector('.size-btn.active');
        
        // –î–ª—è –Ω–∞–ø–∏—Ç–∫–æ–≤ size –±—É–¥–µ—Ç null
        const size = sizeBtn ? sizeBtn.getAttribute('data-size') : null;
        const displayName = size ? `${name} (${size} —Å–º)` : name;
        
        // –ü–æ–∏—Å–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞ (—É—á–∏—Ç—ã–≤–∞–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–∞–∑–º–µ—Ä–∞)
        const existingItem = cart.find(item => 
            item.id === id && 
            ((size && item.size === size) || (!size && !item.size))
        );
        
        if (existingItem) {
            existingItem.quantity++;
        } else {
            cart.push({
                id,
                name: displayName,
                price: parseInt(price),
                quantity: 1,
                size: size || null
            });
        }
        
        updateCart();
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
    function updateCart() {
        cartItems.innerHTML = '';
        
        if (cart.length === 0) {
            cartItems.innerHTML = '<div class="empty-cart">–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</div>';
            cartCount.textContent = '0';
            cartTotal.textContent = '0 ‚ÇΩ';
            return;
        }
        
        let total = 0;
        let count = 0;
        
        cart.forEach(item => {
            const itemTotal = item.price * item.quantity;
            total += itemTotal;
            count += item.quantity;
            
            const cartItem = document.createElement('div');
            cartItem.className = 'cart-item';
            cartItem.innerHTML = `
                <div class="cart-item-header">
                    <span class="cart-item-title">${item.name}</span>
                    <span class="cart-item-price">${itemTotal} ‚ÇΩ</span>
                </div>
                <div class="cart-item-controls">
                    <button onclick="changeQuantity('${item.id}', -1, '${item.size || ''}')">-</button>
                    <span class="cart-item-quantity">${item.quantity}</span>
                    <button onclick="changeQuantity('${item.id}', 1, '${item.size || ''}')">+</button>
                    <button onclick="removeFromCart('${item.id}', '${item.size || ''}')">
                        <i class="fas fa-trash"></i>
                    </button>
                </div>
            `;
            
            cartItems.appendChild(cartItem);
        });
        
        cartCount.textContent = count;
        cartTotal.textContent = `${total} ‚ÇΩ`;
    }

    // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    window.changeQuantity = function(id, delta, size) {
        // –î–ª—è –Ω–∞–ø–∏—Ç–∫–æ–≤ size –±—É–¥–µ—Ç –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ null
        const itemSize = size === '' ? null : size;
        
        const item = cart.find(item => 
            item.id === id && 
            ((itemSize !== null && item.size === itemSize) || (itemSize === null && item.size === null))
        );
        
        if (!item) return;
        
        item.quantity += delta;
        
        if (item.quantity < 1) {
            removeFromCart(id, itemSize);
            return;
        }
        
        updateCart();
    };

    window.removeFromCart = function(id, size) {
        // –î–ª—è –Ω–∞–ø–∏—Ç–∫–æ–≤ size –±—É–¥–µ—Ç –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ null
        const itemSize = size === '' ? null : size;
        
        cart = cart.filter(item => 
            !(item.id === id && 
            ((itemSize !== null && item.size === itemSize) || (itemSize === null && item.size === null))
        );
        updateCart();
        showNotification('–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã');
    };

    window.toggleCart = function() {
        cartSidebar.classList.toggle('active');
    };

    window.checkout = function() {
        if (cart.length === 0) {
            showNotification('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞');
            return;
        }
        document.getElementById('order-modal').style.display = 'block';
    };

    window.closeModal = function() {
        document.getElementById('order-modal').style.display = 'none';
    };

    window.submitOrder = function(event) {
        event.preventDefault();
        
        const name = document.getElementById('name').value;
        const phone = document.getElementById('phone').value;
        const address = document.getElementById('address').value;
        const comment = document.getElementById('comment').value;
        
        let message = `üì¶ *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!*\n\n`;
        message += `üë§ *–§–ò–û:* ${name}\n`;
        message += `üì± *–¢–µ–ª–µ—Ñ–æ–Ω:* ${phone}\n`;
        message += `üè† *–ê–¥—Ä–µ—Å:* ${address}\n`;
        message += `üí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:* ${comment || '‚Äî'}\n\n`;
        message += `üçï *–ó–∞–∫–∞–∑:*\n`;
        
        cart.forEach(item => {
            message += `- ${item.name} (${item.quantity} √ó ${item.price} ‚ÇΩ) = ${item.quantity * item.price} ‚ÇΩ\n`;
        });
        
        message += `\n*–ò—Ç–æ–≥–æ:* ${cart.reduce((sum, item) => sum + (item.price * item.quantity), 0)} ‚ÇΩ`;

        const token = '8195704085:AAHMBHP0g906T86Q0w0gW7cMsCvpFq-yw1g';
        const chatId = '5414933430';
        
        fetch(`https://api.telegram.org/bot${token}/sendMessage`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                chat_id: chatId,
                text: message,
                parse_mode: 'Markdown'
            })
        })
        .then(response => {
            if (response.ok) {
                showNotification('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!');
                cart = [];
                updateCart();
                closeModal();
                toggleCart();
            } else {
                showNotification('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞');
            }
        })
        .catch(() => showNotification('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è'));
    };

    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    function showNotification(text) {
        notification.textContent = text;
        notification.classList.add('show');
        
        setTimeout(() => {
            notification.classList.remove('show');
        }, 3000);
    }

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ)
    document.getElementById('theme-toggle').addEventListener('click', function() {
        const body = document.body;
        const themeIcon = this.querySelector('i');
        
        if (body.getAttribute('data-theme') === 'dark') {
            body.removeAttribute('data-theme');
            localStorage.setItem('theme', 'light');
            themeIcon.classList.replace('fa-sun', 'fa-moon');
        } else {
            body.setAttribute('data-theme', 'dark');
            localStorage.setItem('theme', 'dark');
            themeIcon.classList.replace('fa-moon', 'fa-sun');
        }
    });

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π —Ç–µ–º—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    const savedTheme = localStorage.getItem('theme');
    if (savedTheme === 'dark') {
        document.body.setAttribute('data-theme', 'dark');
        document.getElementById('theme-toggle').querySelector('i').classList.replace('fa-moon', 'fa-sun');
    }
});
